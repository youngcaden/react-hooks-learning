[{"D:\\Personal\\react-hook\\src\\index.js":"1","D:\\Personal\\react-hook\\src\\reportWebVitals.js":"2","D:\\Personal\\react-hook\\src\\App.js":"3","D:\\Personal\\react-hook\\src\\Counter.js":"4","D:\\Personal\\react-hook\\src\\Hooks.js":"5"},{"size":822,"mtime":1610007771696,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1178,"mtime":1609399831778,"results":"9","hashOfConfig":"7"},{"size":1975,"mtime":1610007711475,"results":"10","hashOfConfig":"7"},{"size":1331,"mtime":1610005527341,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"89fz2x",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},"D:\\Personal\\react-hook\\src\\index.js",[],"D:\\Personal\\react-hook\\src\\reportWebVitals.js",[],["25","26"],"D:\\Personal\\react-hook\\src\\App.js",["27","28"],"\n\nimport React from 'react';\n\nimport {useState, useEffect,useContext } from 'react'\n\nimport './App.css';\n\n\n\n// function App() {\n  \n//   const [count, setCount] = useState(125);\n\n//   return (\n//     <div className=\"App\">\n//           Count: {count}\n//         <button onClick={() => setCount(125)}>Reset</button>\n//         <button onClick={() => setCount(prevCount => prevCount - 5)}>-</button>\n//         <button onClick={() => setCount(prevCount => prevCount + 7)}>+</button>\n//     </div>\n//   );\n// }\n\n\n\nconst themes = {\n  light: {\n    foreground: \"#000000\",\n    background: \"#00ff00\"\n  },\n  dark: {\n    foreground: \"#ffffff\",\n    background: \"#ff0000\"\n  }\n};\n\nconst ThemeContext = React.createContext(themes.dark);\n\nfunction App() {\n  return (\n    <ThemeContext.Provider value={themes.light}>\n      <Toolbar />\n    </ThemeContext.Provider>\n  );\n}\n\nfunction Toolbar(props) {\n  return (\n    <div>\n      <ThemedButton />\n    </div>\n  );\n}\n\nfunction ThemedButton() {\n  const theme = useContext(ThemeContext);\n  return (\n    <button style={{ background: theme.background, color: theme.foreground }}>\n      I am styled by theme context!\n    </button>\n  );\n}\nexport default App;\n","D:\\Personal\\react-hook\\src\\Counter.js",[],"D:\\Personal\\react-hook\\src\\Hooks.js",["29"],"\r\nimport React, { useState, useCallback, useEffect } from 'react'\r\n\r\n\r\nfunction Counter() {\r\n    const [count, setCount] = useState(0);\r\n    const [a, setA] = useState(100);\r\n\r\n    const fn = useCallback(() => {\r\n        console.log('callback', a)\r\n    }, [a])\r\n    // 可知fn是依赖于a的，只有当a发生变化的时候fn才会变化，否则每轮render的fn都是同一个\r\n\r\n    const f1 = () => {\r\n        console.log('f1')\r\n    }\r\n    // 对于f1，每轮循环都有独自的f1，所以相当于一直在变化，如果useEffect依赖于f1的话，每次render之后都会执行\r\n\r\n    useEffect(() => {\r\n        console.log('this is effect')\r\n    }, [fn])\r\n    // 当dependency数组里面是f1时，不管更新count还是a，都会执行里面的函数，打印出this is effect\r\n    // 当dependency数组里面是fn时，只有更新a时才会执行该函数\r\n    return (\r\n        <>\r\n\r\n            Count: {count}\r\n            <hr/>\r\n            \r\n            A: {a}\r\n            <hr/>\r\n            <button onClick={() => setCount(count + 1)}>+</button>\r\n            <button onClick={() => setCount(count - 1)}>-</button>\r\n            <br />\r\n            <button onClick={() => setA(a + 1)}>+</button>\r\n            <button onClick={() => setA(a - 1)}>-</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Counter",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":5,"column":9,"nodeType":"36","messageId":"37","endLine":5,"endColumn":17},{"ruleId":"34","severity":1,"message":"38","line":5,"column":19,"nodeType":"36","messageId":"37","endLine":5,"endColumn":28},{"ruleId":"34","severity":1,"message":"39","line":14,"column":11,"nodeType":"36","messageId":"37","endLine":14,"endColumn":13},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'f1' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]