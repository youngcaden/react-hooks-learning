[{"D:\\Personal\\react-hook\\src\\index.js":"1","D:\\Personal\\react-hook\\src\\reportWebVitals.js":"2","D:\\Personal\\react-hook\\src\\router\\router.js":"3","D:\\Personal\\react-hook\\src\\components\\App.js":"4","D:\\Personal\\react-hook\\src\\components\\Hooks.js":"5","D:\\Personal\\react-hook\\src\\components\\Counter.js":"6","D:\\Personal\\react-hook\\src\\components\\Loading.js":"7","D:\\Personal\\react-hook\\src\\components\\useCount.js":"8","D:\\Personal\\react-hook\\src\\components\\Ref.js":"9"},{"size":657,"mtime":1611902553051,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1462,"mtime":1611561419913,"results":"13","hashOfConfig":"11"},{"size":1184,"mtime":1610074314901,"results":"14","hashOfConfig":"11"},{"size":1741,"mtime":1610070082407,"results":"15","hashOfConfig":"11"},{"size":1975,"mtime":1610007711475,"results":"16","hashOfConfig":"11"},{"size":246,"mtime":1610015419819,"results":"17","hashOfConfig":"11"},{"size":935,"mtime":1611561202407,"results":"18","hashOfConfig":"11"},{"size":1202,"mtime":1612405156446,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"89fz2x",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Personal\\react-hook\\src\\index.js",[],["42","43"],"D:\\Personal\\react-hook\\src\\reportWebVitals.js",[],"D:\\Personal\\react-hook\\src\\router\\router.js",[],"D:\\Personal\\react-hook\\src\\components\\App.js",["44","45"],"\n\nimport React from 'react';\n\nimport {useState, useEffect,useContext } from 'react'\n\n\nimport '../css/App.css';\n\n\n\n// function App() {\n  \n//   const [count, setCount] = useState(125);\n\n//   return (\n//     <div className=\"App\">\n//           Count: {count}\n//         <button onClick={() => setCount(125)}>Reset</button>\n//         <button onClick={() => setCount(prevCount => prevCount - 5)}>-</button>\n//         <button onClick={() => setCount(prevCount => prevCount + 7)}>+</button>\n//     </div>\n//   );\n// }\n\n\n\nconst themes = {\n  light: {\n    foreground: \"#000000\",\n    background: \"#00ff00\"\n  },\n  dark: {\n    foreground: \"#ffffff\",\n    background: \"#ff0000\"\n  }\n};\n\nconst ThemeContext = React.createContext(themes.dark);\n\nfunction App() {\n  return (\n    <ThemeContext.Provider value={themes.light}>\n      <Toolbar />\n    </ThemeContext.Provider>\n  );\n}\n\nfunction Toolbar(props) {\n  return (\n    <div>\n      <ThemedButton />\n    </div>\n  );\n}\n\nfunction ThemedButton() {\n  const theme = useContext(ThemeContext);\n  return (\n    <button style={{ background: theme.background, color: theme.foreground }}>\n      I am styled by theme context!\n    </button>\n  );\n}\nexport default App;\n","D:\\Personal\\react-hook\\src\\components\\Hooks.js",["46"],"\r\nimport React, { useState, useCallback, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nfunction Counter() {\r\n    const [count, setCount] = useState(0);\r\n    const [a, setA] = useState(100);\r\n\r\n    const fn = useCallback(() => {\r\n        console.log('callback', a)\r\n    }, [a])\r\n    // 可知fn是依赖于a的，只有当a发生变化的时候fn才会变化，否则每轮render的fn都是同一个\r\n\r\n    const f1 = () => {\r\n        console.log('f1')\r\n    }\r\n    // 对于f1，每轮循环都有独自的f1，所以相当于一直在变化，如果useEffect依赖于f1的话，每次render之后都会执行\r\n\r\n    useEffect(() => {\r\n        console.log('this is effect')\r\n        fn()\r\n    }, [fn])\r\n    // 当dependency数组里面是f1时，不管更新count还是a，都会执行里面的函数，打印出this is effect\r\n    // 当dependency数组里面是fn时，只有更新a时才会执行该函数\r\n\r\n    const hanldeClick = () =>{\r\n        console.log(\"handle click function execute....\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            Count: {count}\r\n            <hr/>\r\n            \r\n            A: {a}\r\n\r\n            <button onClick={() => setCount(count + 1)}>+</button>\r\n            <button onClick={() => setCount(count - 1)}>-</button>\r\n            <br />\r\n            <button onClick={() => setA(a + 1)}>+</button>\r\n            <button onClick={() => setA(a - 1)}>-</button>\r\n            <hr/>\r\n\r\n            <Portals>\r\n                <button onClick={ hanldeClick }>点击这里 </button>\r\n               \r\n            </Portals>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nfunction Portals(props){\r\n    return ReactDOM.createPortal(props.children, document.querySelector('#root'))\r\n}\r\n\r\n\r\n\r\nexport default Counter","D:\\Personal\\react-hook\\src\\components\\Counter.js",[],"D:\\Personal\\react-hook\\src\\components\\Loading.js",[],"D:\\Personal\\react-hook\\src\\components\\useCount.js",["47"],"\r\n\r\n\r\n\r\nimport React, { useState } from 'react'\r\n\r\nimport '../css/useCount.css'\r\n\r\nfunction  useCount(init){\r\n    let [count,changeCount] = useState(init)\r\n\r\n    const increase = () =>{\r\n        changeCount(count +1)\r\n    }\r\n\r\n    const decrease = () => {\r\n        changeCount(count-1)\r\n    }\r\n\r\n    const reset = () => {\r\n        changeCount(init)\r\n    }\r\n\r\n    return [count, { increase, decrease, reset }]\r\n \r\n}\r\n\r\nfunction MyHooks(){\r\n\r\n    let [a, changeA] = useCount(121)\r\n    let content\r\n\r\n    return (\r\n        <div className=\"useCount\">\r\n\r\n            <input ref={(input) => content = input } placeholder=\"Hello!\" />\r\n            <input placeholder=\"Hello!\" type=\"file\" />\r\n            <button onClick={changeA.increase}>增加:{a}</button>\r\n            <button onClick={changeA.decrease}>减少:{a}</button>\r\n            <button onClick={changeA.reset}>重置:{a}</button>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyHooks","D:\\Personal\\react-hook\\src\\components\\Ref.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":9,"nodeType":"54","messageId":"55","endLine":5,"endColumn":17},{"ruleId":"52","severity":1,"message":"56","line":5,"column":19,"nodeType":"54","messageId":"55","endLine":5,"endColumn":28},{"ruleId":"52","severity":1,"message":"57","line":14,"column":11,"nodeType":"54","messageId":"55","endLine":14,"endColumn":13},{"ruleId":"52","severity":1,"message":"58","line":36,"column":36,"nodeType":"54","messageId":"55","endLine":36,"endColumn":43},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'f1' is assigned a value but never used.","'content' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]